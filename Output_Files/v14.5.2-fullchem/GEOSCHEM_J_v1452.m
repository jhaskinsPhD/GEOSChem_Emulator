function J = GEOSCHEM_J_v1452(Met,Jmethod)
% This function calculates photolysis frequencies for the F0AM-compliant
% GEOS-Chem Mechanism for version 14.5.2-Hg (**MECHTYPE**)
% generated by the GEOS-Chem Emulator on 2025-07-10. Photolysis 
% mapping was done using **FJX_VERSION** with JMAP_TYPE = **JMAP_TYPE**.
%
% INPUTS:
% Met: structure containing required meteorological constraints. Required vars depend on Jmethod.
%       Met.SZA: solar zenith angle in degrees
%       Met.ALT: altitude, meters
%       Met.O3col: overhead ozone column, DU
%       Met.albedo: surface reflectance, 0-1 (unitless)
%       Met.T: temperature, T
%       Met.P: pressure, mbar
%       Met.LFlux: name of a text file containing an actinic flux spectrum
%
% Jmethod: numeric flag or string specifying how to calculate J-values. Default is 'MCM'.
%       0 or 'MCM':      use MCMv3.3.1 parameterization.
%                         Some reactions are not included in MCM. For these, "HYBRID" values are used.
%                         Required Met fields: SZA
%       1 or 'BOTTOMUP': bottom-up integration of cross sections/quantum yields.
%                         See J_BottomUp.m for more info.
%                         Required Met fields: LFlux, T, P
%       2 or 'HYBRID':   Interpolation of hybrid J-values from TUV solar spectra.
%                         See J_TUVhybrid.m for more info.
%                         Required Met fields: SZA, ALT, O3col, albedo
%
% OUTPUTS:
% J: structure of J-values
%
% The following (named) photolysis rates must be defined in "GEOSChem_J.m"
% for this mechanism to work:
%    required_Js = {'jNO2_b','jClO','jBrO','jMB','jMBNO2','jMBHO2',...
%    'jMBOH','jMB2','jMBBRO','jMBCLO','jMC2','jMO','jNO2_a'};

% INPUTS - unpack met vars as indvidual variables. 
struct2var(Met)

if nargin<2
    Jmethod = 'MCM';
elseif ischar(Jmethod)
    Jmethod = upper(Jmethod);
end

% J-Values
switch Jmethod
    case {0,'MCM'}
        Jmcm = MCMv331_J(Met,'MCM');
        
    case {1,'BOTTOMUP'}
        Jmcm = J_BottomUp(LFlux,T,P);
        
    case {2,'HYBRID'}
        Jmcm = J_Hybrid(SZA,ALT,O3col,albedo);
        
    otherwise
        error(['MCMv331_J: invalid Jmethod "' Jmethod ...
            '". Valid options are "MCM" (0), "BOTTOMUP" (1), "HYBRID" (2).'])
end

J=struct;

%--------------------------------------------------------------------------
% Photolysis of species formed via at least 1 non-heterogeneous reaction:
%--------------------------------------------------------------------------
% Jvalues that HAVE a direct MCM analogue J-Value
J.jNO2_a = 0.01.*(Jmcm.J4); % PHOTOL(13) = jNO2_a & used for HG2ORGP+hv->HG0+PRODUCTS
J.jNO2_b = Jmcm.J4; % PHOTOL(25) = jNO2_b & used for NO2+hv->NO+O

% Jvalues that do NOT HAVE an MCM analogue J-Value:
J.jClO = Jmcm.Jn33; % PHOTOL(26) = jClO & used for ClO+hv->Cl+O
J.jBrO = Jmcm.Jn25; % PHOTOL(27) = jBrO & used for BrO+hv->Br+O
J.jMB = Jmcm.Jv37; % PHOTOL(4) = jMB & used for HGBR+hv->HG0+BR
J.jMO = Jmcm.Jv38; % PHOTOL(6) = jMO & used for HGOH+hv->HG0+OH
J.jMBOH = Jmcm.Jv41; % PHOTOL(16) = jMBOH & used for HGCLOH+hv->HG0+PRODUCTS
J.jMB2 = Jmcm.Jv40; % PHOTOL(17) = jMB2 & used for HGCLBR+hv->HG0+PRODUCTS
J.jMBNO2 = Jmcm.Jv45; % PHOTOL(20) = jMBNO2 & used for HGOHNO2+hv->HGOH+PRODUCTS
J.jMBHO2 = Jmcm.Jv42; % PHOTOL(21) = jMBHO2 & used for HGOHHO2+hv->HGOH+PRODUCTS
J.jMC2 = Jmcm.Jv49; % PHOTOL(22) = jMC2 & used for HGOHOH+hv->HGOH+PRODUCTS
J.jMBBRO = Jmcm.Jv44; % PHOTOL(23) = jMBBRO & used for HGOHBRO+hv->HGOH+PRODUCTS
J.jMBCLO = Jmcm.Jv43; % PHOTOL(24) = jMBCLO & used for HGOHCLO+hv->HGOH+PRODUCTS

%--------------------------------------------------------------------------
% Photolysis of species formed EXCLUSIVELY from a heterogeneous reaction:
%--------------------------------------------------------------------------
**HET_PHOTO_COMMENT**

